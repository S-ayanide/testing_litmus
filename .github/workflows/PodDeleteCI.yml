name: Pod-Delete-CI-Workflow
on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  push:
    branches: [master]

jobs:
  Our-Chaos-Action:
    runs-on: ubuntu-latest
    env:
      KUBECONFIG: ~/.kube/config
    steps:

      - uses: actions/checkout@master

      - name: Clone Litmus Go
        run: |
          git clone https://github.com/litmuschaos/litmus-go.git
          
      - name: CD
        run: |
          cd litmus-go
          ls
          
      - name: Create KinD Cluster
        run: |
          kind create cluster
          kubectl cluster-info --context kind-kind
          kind get kubeconfig --internal > ~/.kube/config
          kubectl get nodes 

      - name: Deploy a sample application for chaos injection
        run: |
          kubectl apply -f https://raw.githubusercontent.com/litmuschaos/chaos-ci-lib/master/app/nginx.yml
          sleep 30

      - name: Setting up kubeconfig ENV for Github Chaos Action
        run: echo ::set-env name=KUBE_CONFIG_DATA::$(base64 -w 0 $KUBECONFIG)
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Setup litmus and deploy application
        run: |
          cd litmus-go
          make build-litmus
          make app-deploy
          
#       - name: Running Node Drain experiments
#         env:
#           GO_EXPERIMENT_IMAGE: litmuschaos/go-runner:ci        
#           EXPERIMENT_IMAGE_PULL_POLICY: Always
#         run: make pod-delete

      - name: Running Litmus pod delete chaos experiment
        uses: litmuschaos/github-chaos-actions@master
        env:
          APP_NS: default
          APP_LABEL: run=nginx
          APP_KIND: deployment
          EXPERIMENT_NAME: pod-delete
          EXPERIMENT_IMAGE: litmuschaos/go-runner
          EXPERIMENT_IMAGE_TAG: ci
          IMAGE_PULL_POLICY: Always
          JOB_CLEANUP_POLICY: delete

      - name: Uninstall Litmus
        uses: litmuschaos/github-chaos-actions@master
        env:
          LITMUS_CLEANUP: true

      - name: Deleting KIND cluster
        if: always()
        run: kind delete cluster
